"首页的任务列表请求结构体"
input HomeIssueInfoReq{
    "关联类型，1：我发起的，2：我负责的，3：我参与的，4：我关注的"
    relatedType: Int
    "排序类型，1：项目分组，2：优先级分组，3：创建日期降序，4：最后更新日期降序, 5: 按开始时间最早, 6：按开始时间最晚, 8：按截止时间最近，9：按创建时间最早, 10: sort排序"
    orderType: Int
    "状态,1:未完成，2：已完成，3：未开始，4：进行中，5: 已逾期"
    status: Int
    "流程状态id"
    processStatusId: Int64
    "类型，1：主任务,2 子任务"
    type: Int
    "截止时间开始时间点(若只选择开始时间：表示任务截止日期在这之后的所有任务)"
    startTime: Time
    "截止时间结束时间点(若只选择截止时间：则表示任务截止时间在这之前的所有任务)"
    endTime: Time
    "负责人"
    ownerIds: [Int64!]
    "创建人"
    creatorIds: [Int64!]
    "参与人"
    participantIds: [Int64!]
    "关注人"
    followerIds: [Int64!]
    "时间范围：本周，全部.."
    timeScope: Time
    "搜索筛选"
    searchCond: String
    "项目id"
    projectId: Int64
    "迭代id"
    iterationId: Int64
    "是否已规划(是否关联了迭代)，1: 已规划，2：未规划 "
    planType: Int
    "项目对象类型id"
    projectObjectTypeId: Int64
    "支持多个项目对象类型同时做筛选"
    projectObjectTypeIds: [Int64!]
    "优先级"
    priorityId: Int64
    "组合查询类型，1: 今日指派给我，2：最近截止(包括即将逾期和已逾期)，3：今日逾期，4：逾期完成, 5:即将逾期,6:今日创建"
    combinedType: Int
    "任务标签id"
    issueTagId: [Int64!]
    "项目是否归档(1是2否3所有,不传查询未归档)"
    isFiling:Int
    "父任务id"
    parentId:Int64
    "上次更新时间（会查询这个时间点之后有变动的任务，其中包括被删除的任务）"
    lastUpdateTime: Time
    "是否查询父任务的子任务, 如果不是空，且值为1，则将子任务的父任务也查询出来"
    enableParentIssues: Int
    "周期开始时间（只要开始时间和截止时间有一个大于该项则命中条件）"
    periodStartTime: Time
    "周期结束时间（只要开始时间和截止时间有一个小于该项则命中条件）"
    periodEndTime: Time
    "附件资源id"
    resourceId: Int64
}

"任务简单信息请求结构体（任务详情中的子任务信息）"
input IssueRestInfoReq{
    "状态,1:未完成，2：已完成"
    status: Int
    "项目id"
    projectId: Int64
    "父任务id"
    parentId: Int64
    "任务id集合"
    issueIds: [Int64]
}

"首页任务tag信息"
type HomeIssueTagInfo{
    "标签id"
    id: Int64!
    "标签名"
    name: String!
    "背景颜色"
    bgStyle:String!
    "字体颜色"
    fontStyle:String!
}

"任务结构体"
type Issue{
    "任务id"
    id:Int64!
    "组织id"
    orgId:Int64!
    "任务code"
    code:String!
    "项目id"
    projectId:Int64!
    "项目对象类型id"
    projectObjectTypeId:Int64!
    "标题"
    title:String!
    "负责人id"
    owner:Int64!
    "优先级id"
    priorityId:Int64!
    "来源"
    sourceId:Int64!
    "问题类型id"
    issueObjectTypeId:Int64!
    "计划开始时间"
    planStartTime:Time!
    "计划结束时间"
    planEndTime:Time!
    "实际开始时间"
    startTime:Time!
    "实际结束时间"
    endTime:Time!
    "计划工时"
    planWorkHour:Int!
    "迭代id"
    iterationId:Int64!
    "版本id"
    versionId:Int64!
    "模块id"
    moduleId:Int64!
    "父任务id"
    parentId:Int64!
    "父任务标题"
    parentTitle: String!
    "备注"
    remark: String
    "状态id"
    status:Int64!
    "创建者"
    creator:Int64!
    "创建时间"
    createTime:Time!
    "更新者"
    updator:Int64!
    "更新时间"
    updateTime:Time!
    "排序"
    sort: Int64!
}

"单个任务信息详情结构体"
type IssueInfo{
    "任务信息"
    issue: Issue!
    "项目信息"
    project: HomeIssueProjectInfo!
    "状态信息"
    status: HomeIssueStatusInfo!
    "优先级信息"
    priority: HomeIssuePriorityInfo!
    "执行人信息"
    owner: UserIdInfo!
    "执行人信息"
    creatorInfo: UserIdInfo!
    "参与人"
    participantInfos: [UserIdInfo!]
    "关注人"
    followerInfos: [UserIdInfo!]
    "下一个状态"
    nextStatus: [HomeIssueStatusInfo!]
    "标签信息"
    tags: [HomeIssueTagInfo!]
    "来源信息"
    sourceInfo: IssueSourceInfo
    "类型信息"
    typeInfo: IssueObjectTypeInfo
    "子任务数量"
    childsNum: Int64!
    "子任务已完成数量"
    childsFinishedNum: Int64!
    "任务类型名称"
    projectObjectTypeName:String!
}

"创建任务请求结构体"
input CreateIssueReq{
    "项目id"
    projectId:Int64!
    "标题"
    title:String!
    "优先级"
    priorityId: Int64!
    "类型id，问题，需求...."
    typeId: Int64
    "负责人"
    ownerId: Int64!
    "参与人"
    participantIds: [Int64!]
    "关注人"
    followerIds: [Int64!]
    "计划开始时间"
    planStartTime:Time
    "计划结束时间"
    planEndTime:Time
    "计划工作时长"
    planWorkHour:Int
    "所属版本id"
    versionId:Int64
    "所属模块id"
    moduleId:Int64
    "父任务id"
    parentId:Int64
    "备注"
    remark: String
    "所属迭代id"
    iterationId:Int64
    "问题对象类型id"
    issueObjectId:Int64
    "子任务列表"
    children: [IssueChildren]
    "关联的标签列表"
    tags: [IssueTagReqInfo!]
}

"任务标签结构体"
input IssueTagReqInfo{
    "标签id"
    id: Int64!
    "标签名称"
    name: String!
}

"子任务创建结构体"
input IssueChildren{
    "名称"
    title:String!
    "负责人"
    ownerId:Int64!
    "类型id，问题，需求...."
    typeId: Int64
    "优先级"
    priorityId: Int64!
    "计划开始时间"
    planStartTime:Time
    "计划结束时间"
    planEndTime:Time
    "计划工作时长"
    planWorkHour:Int
    "备注"
    remark:String
}

"更新任务请求结构体"
input UpdateIssueReq{
    "要更新的任务id"
    id:Int64!
    # "项目id" 转移任务不走这里，去掉项目id
    # projectId:Int64
    "标题"
    title:String
    "负责人"
    ownerId:Int64
    "优先级id"
    priorityId:Int64
    "计划开始时间"
    planStartTime:Time
    "计划结束时间"
    planEndTime:Time
    "计划工作时长"
    planWorkHour:Int
    "备注"
    remark: String
    "迭代"
    iterationId:Int64
    "来源"
    sourceId:Int64
    "类型"
    issueObjectTypeId:Int64
    "参与人"
    participantIds: [Int64!]
    "关注人"
    followerIds: [Int64!]
    "变动的字段列表"
    updateFields:[String!]
}

"更新项目对象类型请求结构体"
input UpdateIssueProjectObjectTypeReq{
    "要更新的任务id"
    id:Int64!
   "要更新的projectObjectType"
    projectObjectTypeId:Int64!
}

"更新任务状态请求结构体"
input UpdateIssueStatusReq{
    "任务id"
    id:Int64!
    "要更新的状态id"
    nextStatusId:Int64
    "要更新的状态类型,1: 未开始，2：进行中，3：已完成"
    nextStatusType: Int
    "完成父任务时，是否同步更新子任务的状态,1:是，2：否，默认为否"
    needModifyChildStatus: Int
}

"更新任务Sort请求结构体"
input UpdateIssueSortReq{
    "任务id"
    id: Int64!
    "排序位置标记，上一个任务id, beforeId和afterId至少传一个，否则不会更新sort"
    beforeId: Int64
    "排序位置标记，下一个任务id"
    afterId: Int64
    "项目对象类型id"
    projectObjectTypeId: Int64
}

"更新任务标签关联请求结构体"
input UpdateIssueTagsReq{
    "任务id"
    id: Int64!
    "新关联的标签列表，addTags和delTags可以同时存在"
    addTags: [IssueTagReqInfo!]
    "要取消关联的标签列表"
    delTags: [IssueTagReqInfo!]
}

"更新任务响应结构体"
type UpdateIssueResp{
    "任务id"
    id:Int64!
}

"删除任务响应结构体"
input DeleteIssueReq{
    "任务id"
    id:Int64!
}

"任务列表响应结构体"
type IssueList{
    "总数量"
    total:Int64!
    "任务列表"
    list:[Issue!]
}

"首页任务列表响应结构体"
type HomeIssueInfoResp{
    "总数量"
    total:Int64!
    "实际总数量"
    actualTotal: Int64!
    "首页任务列表"
    list:[HomeIssueInfo!]
}

"任务简单信息响应结构体（任务详情中的子任务信息）"
type IssueRestInfoResp{
    "总数量"
    total:Int64!
    "任务简单信息列表"
    list:[IssueRestInfo!]
}

"首页任务信息结构体"
type HomeIssueInfo{
    "任务信息"
    issue: Issue!
    "项目信息"
    project: HomeIssueProjectInfo!
    "执行人信息"
    owner: HomeIssueOwnerInfo!
    "状态信息"
    status: HomeIssueStatusInfo!
    "优先级信息"
    priority: HomeIssuePriorityInfo!
    "标签信息"
    tags: [HomeIssueTagInfo!]
    "子任务数量"
    childsNum: Int64!
    "子任务已完成数量"
    childsFinishedNum: Int64!
}

"任务的简化信息"
type IssueRestInfo{
    "任务id"
    id: Int64!
    "任务标题"
    title: String!
    "负责人"
    ownerId: Int64!
    "负责人名称"
    ownerName: String!
    "负责人头像"
    ownerAvatar: String!
    "是否已被删除，为true则代表被组织移除"
    ownerIsDeleted: Boolean!
    "是否已被禁用, 为true则代表被组织禁用"
    ownerIsDisabled: Boolean!

    "是否已完成"
    finished: Boolean!
    "状态id"
    statusId:Int64!
    "状态名称"
    statusName:String!
    "计划结束时间"
    planEndTime:Time!
    "计划开始时间"
    planStartTime:Time!
    "完成时间"
    endTime:Time!
    "优先级信息"
    priorityInfo:HomeIssuePriorityInfo!
}

"首页任务-优先级信息结构体"
type HomeIssuePriorityInfo{
    "优先级id"
    id: Int64!
    "优先级名称"
    name: String!
    "背景色"
    bgStyle: String!
    "字体色"
    fontStyle: String!
}

"任务-来源信息结构体"
type IssueSourceInfo{
    "id"
    id: Int64!
    "来源名称"
    name: String!
}

"任务-类型信息结构体"
type IssueObjectTypeInfo{
    "类型id"
    id: Int64!
    "类型名"
    name: String!
}

"首页任务-状态信息结构体"
type HomeIssueStatusInfo{
    "状态id"
    id: Int64!
    "状态名"
    name: String!
    "显示名，为空则显示状态名"
    displayName: String
    "背景色"
    bgStyle: String!
    "字体色"
    fontStyle: String!
    "状态类型,1未开始,2进行中,3已完成"
    type: Int!
}

"首页任务-项目信息结构体"
type HomeIssueProjectInfo{
    "项目id"
    id: Int64!
    "项目名称"
    name: String!
    "是否归档(1是2否)"
    isFilling:Int!
}

"首页任务-负责人信息结构体"
type HomeIssueOwnerInfo{
    "负责人信息"
    id: Int64!
    "负责人名称"
    name: String!
    "负责人头像"
    avatar: String
    "是否已被删除，为true则代表被组织移除"
    isDeleted: Boolean!
    "是否已被禁用, 为true则代表被组织禁用"
    isDisabled: Boolean!
}

"任务报表响应结构体"
type IssueReportResp{
    "总数量"
    total:Int64!
    "分享id"
    shareId:String!
    "报表所属者名称"
    reportUserName:String!
    "开始时间"
    startTime:String!
    "结束时间"
    endTime:String!
    "任务信息"
    list:[HomeIssueInfo!]
}

"任务状态数量统计请求结构体"
input IssueStatusTypeStatReq{
    "项目id"
    projectId: Int64
    "迭代id"
    iterationId: Int64
    "关联类型：1我负责的2我参与的3我关注的4我发起的"
    relationType: Int
}

"每日个人完成图数据统计请求结构体"
input IssueDailyPersonalWorkCompletionStatReq{
    "开始时间, 开始时间和结束时间可以不传，默认七天"
    startDate: Time
    "结束时间"
    endDate: Time
}

"每日个人完成图数据统计响应结构体"
type IssueDailyPersonalWorkCompletionStatResp{
    "数据列表"
    list: [IssueDailyPersonalWorkCompletionStatData!]
}

"每日个人完成图数据统计响应数据"
type IssueDailyPersonalWorkCompletionStatData{
    "日期"
    statDate: String!
    "完成数量"
    completedCount: Int64!
}

"任务状态数量统计响应结构体"
type IssueStatusTypeStatResp{
    "状态为未开始的数量"
    notStartTotal:Int64!
    "状态为进行中的数量"
    processingTotal: Int64!
    "状态为已完成的数量"
    completedTotal: Int64!
    "今日完成数"
    completedTodayTotal: Int64!
    "状态为逾期的数量"
    overdueTotal: Int64!
    "状态为明日逾期"
    overdueTomorrowTotal: Int64!
    "逾期完成"
    overdueCompletedTotal:Int64!
    "任务总数"
    total:Int64!
    "今日到期"
    overdueTodayTotal:Int64!
    "即将到期"
    beAboutToOverdueSum:Int64!
    "指派给我的任务"
    todayCount:Int64!
    "今日创建"
    todayCreateCount:Int64!
    "概览"
    list:[StatCommon!]
}

type StatCommon{
    "名称"
    name:String!
    "数量"
    count:Int64!
}


type IssueStatByObjectType{
    "对象类型id"
    projectObjectTypeId: Int64
    "对象类型名称"
    projectObjectTypeName: String
    "数量"
    total:Int64!
}
type IssueStatusTypeStatDetailResp{
    "未开始的统计"
    notStart:[IssueStatByObjectType]!
    "进行中的统计"
    processing:[IssueStatByObjectType]!
    "已完成的统计"
    completed:[IssueStatByObjectType]!
}

"添加任务评论请求结构体"
input CreateIssueCommentReq{
    "任务id"
    issueId: Int64!
    "评论信息"
    comment: String!
    "提及的用户id"
    mentionedUserIds: [Int64!]
}

"任务添加文件资源"
input CreateIssueResourceReq{
    "任务id"
    issueId: Int64!
    "资源路径"
    resourcePath: String!
    "资源大小，单位B"
    resourceSize: Int64!
    "文件名"
    fileName: String!
    "文件后缀"
    fileSuffix: String!
    "md5"
    md5: String
    "bucketName"
    bucketName: String
}

"删除子任务请求结构体"
input DeleteIssueResourceReq{
    "任务id'"
    issueId: Int64!
    "关联资源id列表"
    deletedResourceIds:[Int64!]!
}

"任务添加关联任务"
input UpdateIssueAndIssueRelateReq{
    "任务id"
    issueId: Int64!
    "添加的关联任务id集合"
    addRelateIssueIds: [Int64!]
    "删除的关联任务id集合"
    delRelateIssueIds: [Int64!]
}

"关联任务列表请求结构体"
input RelatedIssueListReq{
    "任务id"
    issueId:Int64!
}

"获取任务资源请求结构体"
input GetIssueResourcesReq{
    "任务id"
    issueId: Int64!
}

"任务分配排行请求结构体"
input IssueAssignRankReq{
    "项目Id"
    projectId: Int64!
    "rank数量， 1 <= rankTop <= 100， 默认为5"
    rankTop: Int
}

"任务分配信息"
type IssueAssignRankInfo{
    "姓名"
    name: String!
    "用户头像"
    avatar: String!
    "工号：企业下唯一"
    emplId: String!
    "分配的未完成的任务数量"
    incompleteissueCount: Int64!
}

"导入任务"
input ImportIssuesReq{
    "项目id"
    projectId:Int64!
    "excel地址"
    url:String!
    "url类型, 1 网址，2 本地dist路径"
    urlType: Int!
}

"项目和任务信息统计"
type IssueAndProjectCountStatResp{
    "项目未完成的数量"
    projectNotCompletedCount: Int64!
    "任务未完成的数量"
    issueNotCompletedCount: Int64!
    "参与项目数"
    participantsProjectCount:Int64!
    "参与归档项目数"
    filingParticipantsProjectCount:Int64!
}


type ExportIssueTemplateResp{
    "模板地址"
    url:String!
}